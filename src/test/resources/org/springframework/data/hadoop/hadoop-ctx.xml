<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:hdp="http://www.springframework.org/schema/hadoop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/hadoop http://www.springframework.org/schema/hadoop/spring-hadoop.xsd">


	<context:property-placeholder location="test.properties"/>

	<bean id="chainedResourceLoader" class="org.springframework.data.hadoop.io.ChainedResourceLoader">
		<property name="loaders">
			<map>
				<entry key="hdfs" value-ref="hdfsResourceLoader"/>
			</map>
		</property>
	</bean>
	
	<bean id="hdfsResourceLoader" class="org.springframework.data.hadoop.io.HdfsResourceLoader" c:fs-ref="fs" p:register-jvm-url="true"/>
	<bean id="fs" class="org.springframework.data.hadoop.io.FileSystemFactoryBean" p:configuration-ref="fs-config"/>
	
	<hdp:config>
		<entry key="fs.default.name" value="${hd.fs}"/>
	</hdp:config>

	<!-- 
	<bean id="fs-config" class="org.springframework.data.hadoop.configuration.ConfigurationFactoryBean">
	 <property name="properties">
	    <map>
	      <entry key="fs.default.name" value="${hd.fs}"/>
	    </map>
	  </property>
	</bean>
	 -->
	 
	<bean id="hdfs-writer" class="org.springframework.data.hadoop.batch.ResourcesItemWriter" 
		p:resource-loader-ref="hdfsResourceLoader"
		p:generator-ref="name-generator"
		p:overwrite="true">
	</bean>
	
	
	<!-- map the reading resource (file://) to the writing environment (hdfs://) -->
	<!-- we'll move to an Ant-like model -->	
	<bean id="name-generator" class="org.springframework.data.hadoop.batch.ChainedNameGenerator">
		<property name="generators">
			<list>
				<bean class="org.springframework.data.hadoop.batch.BasePathNameGenerator" p:path="classpath:test.properties" p:remove="true"/>
				<bean class="org.springframework.data.hadoop.batch.PrefixNameGenerator" p:prefix="/ide-test/"/>
			</list> 
		</property>
	</bean>
</beans>